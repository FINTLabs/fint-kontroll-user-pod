
on:
  push:
    branches: ['main']

#  workflow_dispatch:

name: Podlet build and deploy

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  ALPHA_CLUSTER_NAME: aks-alpha-fint-2021-11-18
  ALPHA_CLUSTER_RESOURCE_GROUP: rg-aks-alpha
  BETA_CLUSTER_NAME: aks-beta-fint-2021-11-23
  BETA_CLUSTER_RESOURCE_GROUP: rg-aks-beta
  API_CLUSTER_NAME: aks-api-fint-2022-02-08
  API_CLUSTER_RESOURCE_GROUP: rg-aks-api


jobs:

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3.3.0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install dependencies
        run: yarn install

      - name: Build React App
        run: yarn build

      - name: Copy asset-manifest.json to podlet
        run: cp build/asset-manifest.json podlet/

      - name: Rename main.*.js file
        run: mv build/static/js/main.*.js build/static/js/main.js
      - name: Rename main.*.css file
        run: mv build/static/css/main.*.css build/static/css/main.css

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZ_CLI_CDN }}

      - name: Upload assets to CDN
        uses: azure/CLI@v1
        with:
          azcliversion: 2.42.0
          inlineScript: |
            chmod +x $GITHUB_WORKSPACE/upload-assets.sh
            $GITHUB_WORKSPACE/upload-assets.sh ${{ github.event.repository.name }}

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,enable=true,priority=100,prefix=sha-,suffix=,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - uses: azure/use-kubelogin@v1.1
        with:
          kubelogin-version: 'v0.0.26'

#      ## Alpha cluster ##
#      - name: Bake alpha manifests with Kustomize
#        uses: azure/k8s-bake@v2.2
#        with:
#          renderEngine: 'kustomize'
#          kustomizationPath: 'kustomize/overlays/alpha'
#        id: bake-alpha
#
#      - name: Set the target Alpha cluster.
#        uses: azure/aks-set-context@v1
#        with:
#          creds: '${{ secrets.AKS_ALPHA_FINT_GITHUB }}'
#          cluster-name: ${{ env.ALPHA_CLUSTER_NAME }}
#          resource-group: ${{ env.ALPHA_CLUSTER_RESOURCE_GROUP }}
#
#      - name: Deploy to Alpha
#        uses: azure/k8s-deploy@v4.4
#        with:
#          manifests: ${{ steps.bake-alpha.outputs.manifestsBundle }}
#          images: |
#            ${{ steps.meta.outputs.tags }}
#          namespace: fintlabs-no
#          action: deploy

      ## Beta cluster ##
      - name: Bake beta manifests with Kustomize
        uses: azure/k8s-bake@v2.4
        with:
          renderEngine: 'kustomize'
          kustomizationPath: 'kustomize/overlays/beta'
        id: bake-beta

      - name: Set the target Beta cluster.
        uses: azure/aks-set-context@v3
        with:
          admin: 'true'
          use-kubelogin: 'true'
          cluster-name: ${{ env.BETA_CLUSTER_NAME }}
          resource-group: ${{ env.BETA_CLUSTER_RESOURCE_GROUP }}

      - name: Deploy to Beta
        uses: azure/k8s-deploy@v4.4
        with:
          manifests: ${{ steps.bake-beta.outputs.manifestsBundle }}
          images: |
            ${{ steps.meta.outputs.tags }}
          namespace: fintlabs-no
          action: deploy